package com.saphire.iopush.model;
// Generated 24 Jan, 2017 10:27:42 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * IopushUsercategory generated by hbm2java
 */
@Entity
@Table(name = "iopush_usercategory", schema = "public")
public class IopushUsercategory implements java.io.Serializable {

 /**
  * 
  */
 //private static final long serialVersionUID = 1L;
 //private int id;
 //private IopushProduct iopushProduct;
 //private IopushUser iopushUser;
 //private IopushUserplan iopushUserplan;
 private static final long serialVersionUID = 1L;
 private int id;
 private int product_id;//private IopushProduct iopushProduct;  
 private int userId; //shUser iopushUser;
 private int  planId;//private IopushUserplan iopushUserplan;
 private int balance;
 private int total;
 private int used;
 private Date createdOn;
 private Date modifiedOn;
 private String createdBy;
 private String modifiedBy;

 private int limitExceed;
 
 // added for over the limit subscribers records
 
 private int overLimitSubscribersValue;
 
 @Column(name = "over_limit_subscribers")
 public int getOverLimitSubscribersValue() {
	return overLimitSubscribersValue;
}

public void setOverLimitSubscribersValue(int overLimitSubscribersValue) {
	this.overLimitSubscribersValue = overLimitSubscribersValue;
}

@Temporal(TemporalType.TIMESTAMP)
 @Column(name = "created_on", nullable = true, length = 29)
 public Date getCreatedOn() {
  return createdOn;
 }

 public void setCreatedOn(Date createdOn) {
  this.createdOn = createdOn;
 }

 @Temporal(TemporalType.TIMESTAMP)
 @Column(name = "modified_on", length = 29)
 public Date getModifiedOn() {
  return modifiedOn;
 }

 public void setModifiedOn(Date modifiedOn) {
  this.modifiedOn = modifiedOn;
 }
 
 @Column(name = "created_by", length = 30)
 public String getCreatedBy() {
  return createdBy;
 }

 public void setCreatedBy(String createdBy) {
  this.createdBy = createdBy;
 }
 
 @Column(name = "modified_by", length = 30)
 public String getModifiedBy() {
  return modifiedBy;
 }

 public void setModifiedBy(String modifiedBy) {
  this.modifiedBy = modifiedBy;
 }

 public IopushUsercategory() {
 }

 
 public static long getSerialversionuid() {
	return serialVersionUID;
}

 @Column(name = "fk_product_id", nullable = false)
public int getProduct_id() {
	return product_id;
}

public void setProduct_id(int product_id) {
	this.product_id = product_id;
}


@Column(name = "fk_user_id", nullable = false)
public int getUserId() {
	return userId;
}

public void setUserId(int userId) {
	this.userId = userId;
}

@Column(name = "fk_plan_id", nullable = false)
public int getPlanId() {
	return planId;
}

public void setPlanId(int planId) {
	this.planId = planId;
}

public IopushUsercategory(int id, int balance, int total, int used, Date createdOn, Date modifiedOn, String createdBy,
		String modifiedBy) {
	super();
	this.id = id;
	this.balance = balance;
	this.total = total;
	this.used = used;
	this.createdOn = createdOn;
	this.modifiedOn = modifiedOn;
	this.createdBy = createdBy;
	this.modifiedBy = modifiedBy;
}

@Id
 @SequenceGenerator(name = "iopush_user_category_seq", sequenceName = "iopush_user_category_seq", allocationSize = 1)
 @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "iopush_user_category_seq")
 @Column(name = "usercategory_id", unique = true, nullable = false, columnDefinition = "serial")
 public int getId() {
  return this.id;
 }

 public void setId(int id) {
  this.id = id;
 }

 

 @Column(name = "balance", nullable = false)
 public int getBalance() {
  return this.balance;
 }

 public void setBalance(int balance) {
  this.balance = balance;
 }

 @Column(name = "total", nullable = false)
 public int getTotal() {
  return this.total;
 }

 public void setTotal(int total) {
  this.total = total;
 }

 @Column(name = "used", nullable = false)
 public int getUsed() {
  return this.used;
 }

 public void setUsed(int used) {
  this.used = used;
 }

 
 
 

@Override
public String toString() {
	return "IopushUsercategory [id=" + id + ", product_id=" + product_id + ", userId=" + userId + ", planId=" + planId
			+ ", balance=" + balance + ", total=" + total + ", used=" + used + ", "
			+ (createdOn != null ? "createdOn=" + createdOn + ", " : "")
			+ (modifiedOn != null ? "modifiedOn=" + modifiedOn + ", " : "")
			+ (createdBy != null ? "createdBy=" + createdBy + ", " : "")
			+ (modifiedBy != null ? "modifiedBy=" + modifiedBy + ", " : "") + "isLimitExceed=" + limitExceed + "]";
}

@Column(name="islimitexceed")
public int isLimitExceed() {
	return limitExceed;
}

public void setLimitExceed(int limitExceed) {
	this.limitExceed = limitExceed;
}

 

}