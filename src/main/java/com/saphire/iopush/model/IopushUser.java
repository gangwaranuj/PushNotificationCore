package com.saphire.iopush.model;
// Generated 24 Jan, 2017 10:27:42 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

/**
 * IopushUser generated by hbm2java
 */
@Entity
@Table(name = "iopush_user", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames={"email_id"}))



public class IopushUser implements java.io.Serializable, UserDetails {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int userId;
	private String password;
	private String phoneNumber;
	private String middleName;
	private String lastPassword;
	private String countryCode;
	private String emailId;
	private String company;
	private String firstName;
	private String lastName;
	private String imagePath;
	private boolean isActive;
	private short loginAttempts;
	private String salutation;
	private boolean linkRoute;
private int emailFlag;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = true, length = 29)
	public Date getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_on", length = 29)
	public Date getModifiedOn() {
		return modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@Column(name = "created_by", length = 30)
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "modified_by", length = 30)
	public String getModifiedBy() {
		return modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	private String title;
	private String username;
	private Date createdOn;
	private Date modifiedOn;
	private String createdBy;
	private String modifiedBy;
	private String targetVisitors;
	private String websiteUrl;
	private IopushProduct iopushProduct = new IopushProduct();
	//private Set<IopushUsercategory> iopushUsercategories = new HashSet<IopushUsercategory>(0);
	private Set<IopushAuthorityGroupMapping> iopushAuthorityGroupMappings = new HashSet<IopushAuthorityGroupMapping>(0);

	public IopushUser() {
	}

	public IopushUser(int userId, String password, String lastPassword, String countryCode, String emailId,
			String company, String firstName, String imagePath, boolean isActive, short loginAttempts,
			String salutation, String username, String targetVisitors) {
		this.userId = userId;
		this.password = password;
		this.lastPassword = lastPassword;
		this.countryCode = countryCode;
		this.emailId = emailId;
		this.company = company;
		this.firstName = firstName;
		this.imagePath = imagePath;
		this.isActive = isActive;
		this.loginAttempts = loginAttempts;
		this.salutation = salutation;
		this.username = username;
		this.targetVisitors = targetVisitors;
	}

	public IopushUser(int userId, String password, String phoneNumber, String middleName, String lastPassword,
			String countryCode, String emailId, String company, String firstName, String lastName, String imagePath,
			boolean isActive, short loginAttempts, String salutation, String title, String username, String targetVisitors,
			Set<IopushUsercategory> iopushUsercategories, Set<IopushAuthorityGroupMapping> iopushAuthorityGroupMappings,
			IopushProduct iopushProduct) {
		super();
		this.userId = userId;
		this.password = password;
		this.phoneNumber = phoneNumber;
		this.middleName = middleName;
		this.lastPassword = lastPassword;
		this.countryCode = countryCode;
		this.emailId = emailId;
		this.company = company;
		this.firstName = firstName;
		this.lastName = lastName;
		this.imagePath = imagePath;
		this.isActive = isActive;
		this.loginAttempts = loginAttempts;
		this.salutation = salutation;
		this.title = title;
		this.username = username;
		this.targetVisitors = targetVisitors;
		//this.iopushUsercategories = iopushUsercategories;
		this.iopushAuthorityGroupMappings = iopushAuthorityGroupMappings;
		this.iopushProduct = iopushProduct;
	}

	@Id
	@SequenceGenerator(name = "iopush_user_seq", sequenceName = "iopush_user_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "iopush_user_seq")
	@Column(name = "user_id", unique = true, nullable = false, columnDefinition = "serial")
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "password", nullable = false, length = 70)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "phone_number", length = 14)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "middle_name", length = 35)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "last_password", nullable = false, length = 70)
	public String getLastPassword() {
		return this.lastPassword;
	}

	public void setLastPassword(String lastPassword) {
		this.lastPassword = lastPassword;
	}

	@Column(name = "country_code", nullable = true, length = 2)
	public String getCountryCode() {
		return this.countryCode;
	}

	public void setCountryCode(String countryCode) {
		this.countryCode = countryCode;
	}

	@Column(name = "email_id", nullable = false , length = 255)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "company", nullable = true)
	public String getCompany() {
		return this.company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Column(name = "first_name", nullable = false, length = 35)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 35)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "image_path", nullable = true, length = 25)
	public String getImagePath() {
		return this.imagePath;
	}

	public void setImagePath(String imagePath) {
		this.imagePath = imagePath;
	}

	@Column(name = "is_active", nullable = true)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "login_attempts", nullable = true)
	public short getLoginAttempts() {
		return this.loginAttempts;
	}

	public void setLoginAttempts(short loginAttempts) {
		this.loginAttempts = loginAttempts;
	}

	@Column(name = "salutation", nullable = true, length = 5)
	public String getSalutation() {
		return this.salutation;
	}

	public void setSalutation(String salutation) {
		this.salutation = salutation;
	}

	@Column(name = "title", length = 15)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "username", nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "target_visitors", nullable = true, length=20)
	public String getTargetVisitors() {
		return this.targetVisitors;
	}

	public void setTargetVisitors(String targetVisitors) {
		this.targetVisitors = targetVisitors;
	}

/*	@OneToMany(fetch = FetchType.LAZY, mappedBy = "iopushUser")
	public Set<IopushUsercategory> getIopushUsercategories() {
		return this.iopushUsercategories;
	}

	public void setIopushUsercategories(Set<IopushUsercategory> iopushUsercategories) {
		this.iopushUsercategories = iopushUsercategories;
	}
*/
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "iopushUser")
	public Set<IopushAuthorityGroupMapping> getIopushAuthorityGroupMappings() {
		return this.iopushAuthorityGroupMappings;
	}

	public void setIopushAuthorityGroupMappings(Set<IopushAuthorityGroupMapping> iopushAuthorityGroupMappings) {
		this.iopushAuthorityGroupMappings = iopushAuthorityGroupMappings;
	}

	/*
	 * @OneToMany(fetch=FetchType.LAZY, mappedBy="iopushUser") public
	 * Set<IopushProductUserMapping> getIopushProductUserMapping() { return
	 * iopushProductUserMapping; }
	 * 
	 * 
	 * public void setIopushProductUserMapping(Set<IopushProductUserMapping>
	 * iopushProductUserMapping) { this.iopushProductUserMapping =
	 * iopushProductUserMapping; }
	 */

	@Transient
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		// TODO Auto-generated method stub
		Collection<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
		authorities.add(new SimpleGrantedAuthority("ROLE_ADMIN"));
		authorities.add(new SimpleGrantedAuthority("ROLE_USER"));
		return authorities;
	}

	@Transient
	@Override
	public boolean isAccountNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}

	@Transient
	@Override
	public boolean isAccountNonLocked() {
		// TODO Auto-generated method stub
		return true;
	}

	@Transient
	@Override
	public boolean isCredentialsNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}

	@Transient
	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return true;
	}

	
	
	
	@Column(name = "website_url", nullable = true, length = 250)
	public String getWebsiteUrl() {
		return websiteUrl;
	}

	public void setWebsiteUrl(String websiteUrl) {
		this.websiteUrl = websiteUrl;
	}

	/**
	 * @return the iopushProduct
	 */
	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinColumn(name = "fk_product_id", nullable = false)
	public IopushProduct getIopushProduct() {
		return iopushProduct;
	}

	/**
	 * @param iopushProduct
	 *            the iopushProduct to set
	 */
	public void setIopushProduct(IopushProduct iopushProduct) {
		this.iopushProduct = iopushProduct;
	}
	@Column(name = "email_flag", nullable = true, length = 20)
	public int getEmailFlag() {
		return emailFlag;
	}

	public void setEmailFlag(int i) {
		this.emailFlag = i;
	}

	/**
	 * @return the linkRoute
	 */
	@Column(name = "link_route", nullable = true)
	public boolean isLinkRoute() {
		return linkRoute;
	}

	/**
	 * @param linkRoute the linkRoute to set
	 */
	public void setLinkRoute(boolean linkRoute) {
		this.linkRoute = linkRoute;
	}

	@Override
	public String toString() {
		final int maxLen = 10;
		return "IopushUser [userId=" + userId + ", " + (password != null ? "password=" + password + ", " : "")
				+ (phoneNumber != null ? "phoneNumber=" + phoneNumber + ", " : "")
				+ (middleName != null ? "middleName=" + middleName + ", " : "")
				+ (lastPassword != null ? "lastPassword=" + lastPassword + ", " : "")
				+ (countryCode != null ? "countryCode=" + countryCode + ", " : "")
				+ (emailId != null ? "emailId=" + emailId + ", " : "")
				+ (company != null ? "company=" + company + ", " : "")
				+ (firstName != null ? "firstName=" + firstName + ", " : "")
				+ (lastName != null ? "lastName=" + lastName + ", " : "")
				+ (imagePath != null ? "imagePath=" + imagePath + ", " : "") + "isActive=" + isActive
				+ ", loginAttempts=" + loginAttempts + ", "
				+ (salutation != null ? "salutation=" + salutation + ", " : "") + "linkRoute=" + linkRoute
				+ ", emailFlag=" + emailFlag + ", " + (title != null ? "title=" + title + ", " : "")
				+ (username != null ? "username=" + username + ", " : "")
				+ (createdOn != null ? "createdOn=" + createdOn + ", " : "")
				+ (modifiedOn != null ? "modifiedOn=" + modifiedOn + ", " : "")
				+ (createdBy != null ? "createdBy=" + createdBy + ", " : "")
				+ (modifiedBy != null ? "modifiedBy=" + modifiedBy + ", " : "")
				+ (targetVisitors != null ? "targetVisitors=" + targetVisitors + ", " : "")
				+ (websiteUrl != null ? "websiteUrl=" + websiteUrl + ", " : "")
				+ (iopushProduct != null ? "iopushProduct=" + iopushProduct + ", " : "")
				+ (iopushAuthorityGroupMappings != null
						? "iopushAuthorityGroupMappings=" + toString(iopushAuthorityGroupMappings, maxLen) : "")
				+ "]";
	}

	private String toString(Collection<?> collection, int maxLen) {
		StringBuilder builder = new StringBuilder();
		builder.append("[");
		int i = 0;
		for (Iterator<?> iterator = collection.iterator(); iterator.hasNext() && i < maxLen; i++) {
			if (i > 0)
				builder.append(", ");
			builder.append(iterator.next());
		}
		builder.append("]");
		return builder.toString();
	}
	
	

}
